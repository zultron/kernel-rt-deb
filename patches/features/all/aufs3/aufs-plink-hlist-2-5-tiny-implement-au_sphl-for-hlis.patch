From: "J. R. Okajima" <hooanon05@yahoo.co.jp>
Date: Tue, 30 Apr 2013 00:56:34 +0900
Subject: [33/83] aufs: plink hlist 2/5, tiny, implement au_sphl for hlist
Origin: http://sourceforge.net/p/aufs/aufs3-standalone/ci/717168a9d94fff2374303b40262e88479de8375c

Implement au_sphl functions which are very similar to au_spl.
The behaviour doesn't change.

This commit is a part of 'plink hlist' series which converts a simple
linked list intoa hashed array. See other commits too.

Signed-off-by: J. R. Okajima <hooanon05@yahoo.co.jp>
---
 fs/aufs/spl.h | 50 ++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 50 insertions(+)

diff --git a/fs/aufs/spl.h b/fs/aufs/spl.h
index fcbb514..2d53e87 100644
--- a/fs/aufs/spl.h
+++ b/fs/aufs/spl.h
@@ -58,5 +58,55 @@ static inline void au_spl_del_rcu(struct list_head *list,
 	spin_unlock(&spl->spin);
 }
 
+/* ---------------------------------------------------------------------- */
+
+struct au_sphlhead {
+	spinlock_t		spin;
+	struct hlist_head	head;
+};
+
+static inline void au_sphl_init(struct au_sphlhead *sphl)
+{
+	spin_lock_init(&sphl->spin);
+	INIT_HLIST_HEAD(&sphl->head);
+}
+
+static inline void au_sphl_add(struct hlist_node *hlist,
+			       struct au_sphlhead *sphl)
+{
+	spin_lock(&sphl->spin);
+	hlist_add_head(hlist, &sphl->head);
+	spin_unlock(&sphl->spin);
+}
+
+static inline void au_sphl_del(struct hlist_node *hlist,
+			       struct au_sphlhead *sphl)
+{
+	spin_lock(&sphl->spin);
+	hlist_del(hlist);
+	spin_unlock(&sphl->spin);
+}
+
+static inline void au_sphl_del_rcu(struct hlist_node *hlist,
+				   struct au_sphlhead *sphl)
+{
+	spin_lock(&sphl->spin);
+	hlist_del_rcu(hlist);
+	spin_unlock(&sphl->spin);
+}
+
+static inline unsigned long au_sphl_count(struct au_sphlhead *sphl)
+{
+	unsigned long cnt;
+	struct hlist_node *pos;
+
+	cnt = 0;
+	spin_lock(&sphl->spin);
+	hlist_for_each(pos, &sphl->head)
+		cnt++;
+	spin_unlock(&sphl->spin);
+	return cnt;
+}
+
 #endif /* __KERNEL__ */
 #endif /* __AUFS_SPL_H__ */
