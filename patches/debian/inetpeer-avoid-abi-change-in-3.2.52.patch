From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 28 Oct 2013 03:59:01 +0000
Subject: inetpeer: Avoid ABI change in 3.2.52

inet_peer::gc_list and inet_peer::gc_rcu were added in the middle of
struct inet_peer.  This structure is only really used by the IPv4 and
IPv6 stacks, and the new fields only by the built-in inetpeer code,
but this still changed symbol versions for most of networking.

We do need to ensure that where IPv6 is modular we either maintain
binary compatibility or change the relevant symbol versions.  So move
the new fields to the end of the structure and hide them from genksyms.

--- a/include/net/inetpeer.h
+++ b/include/net/inetpeer.h
@@ -41,10 +41,6 @@ struct inet_peer {
 	u32			pmtu_orig;
 	u32			pmtu_learned;
 	struct inetpeer_addr_base redirect_learned;
-	union {
-		struct list_head	gc_list;
-		struct rcu_head     gc_rcu;
-	};
 	/*
 	 * Once inet_peer is queued for deletion (refcnt == -1), following fields
 	 * are not available: rid, ip_id_count, tcp_ts, tcp_ts_stamp
@@ -64,6 +60,13 @@ struct inet_peer {
 	/* following fields might be frequently dirtied */
 	__u32			dtime;	/* the time of last use of not referenced entries */
 	atomic_t		refcnt;
+
+#ifndef __GENKSYMS__
+	union {
+		struct list_head	gc_list;
+		struct rcu_head     gc_rcu;
+	};
+#endif
 };
 
 void			inet_initpeers(void) __init;
